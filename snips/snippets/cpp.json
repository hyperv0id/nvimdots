{
    "fori": {
        "prefix": "fori",
        "body": [
            "for (${1:int} ${2:i} = ${3:0}; $2 < ${4:length}; ++$2) {",
            "\t$0",
            "}"
        ],
        "description": "Code snippet for 'fori' loop"
    },
    "solu": {
        "prefix": "lcsolu",
        "body": [
            "class Solution",
            "{",
            "public:",
            "\t$1 $2($3) {",
            "\t\t$4",
            "\t}",
            "};"
        ],
        "description": "leetcode class Solution template"
    },
    "lc": {
        "prefix": "leetcode",
        "body": [
            "#include <bits/stdc++.h>",
            "",
            "using namespace std;",
            "",
            "class Solution",
            "{",
            "public:",
            "\t$1 $2($3) {",
            "\t\t$4",
            "\t}",
            "};",
            "",
            "int main(int argc, char *argv[]) {",
            "\tSolution s;",
            "\treturn 0;",
            "}"
        ],
        "description": "leetcode template"
    },
    "codeforces": {
        "prefix": "codeforces",
        "body": [
            "#include <bits/stdc++.h>",
            "#include <algorithm>",
            "",
            "using namespace std;",
            "#define endl '\\n'",
            "#define MAX_SIZE 100005",
            "#define MOD 1000000007",
            "#define PI 3.1415926535897932384626433832795",
            "string to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }",
            "string to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }",
            "void yes() { cout<<\"YES\\n\"; }",
            "void no() { cout<<\"NO\\n\"; }",
            "// types",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "",
            "int main(int argc, char *argv[]) {",
            "\tint tc=1;",
            "\t//cin>>tc;",
            "\twhile(tc--){",
            "\t\t$1",
            "\t}",
            "\treturn 0;",
            "}"
        ],
        "description": "codeforces template"
    },
    "hdef": {
        "prefix": "hdef",
        "body": [
            "#ifndef $1",
            "#define $1",
            "",
            "#endif // $1"
        ],
        "description": "header file definitions"
    }
}
