{
    "fori": {
        "prefix": "fori",
        "body": [
            "for (${1:int} ${2:i} = ${3:0}; $2 < ${4:length}; ++$2) {",
            "\t$0",
            "}"
        ],
        "description": "Code snippet for 'fori' loop"
    },
    "solu": {
        "prefix": "lcsolu",
        "body": [
            "class Solution",
            "{",
            "public:",
            "\t$1 $2($3) {",
            "\t\t$4",
            "\t}",
            "};"
        ],
        "description": "leetcode class Solution template"
    },
    "leetcode_main": {
        "prefix": "leetcode",
        "body": [
            "#include <bits/stdc++.h>",
            "",
            "using namespace std;",
            "",
            "",
            "",
            "",
            "int main(int argc, char *argv[]) {",
            "\tSolution s;",
            "\treturn 0;",
            "}"
        ],
        "description": "leetcode template"
    },
    "codeforces": {
        "prefix": "codeforces",
        "body": [
            "#include <bits/stdc++.h>",
            "",
            "using namespace std;",
            "#define _rep(i, a, b) for (int i = (a); i <= (b); ++i)",
            "#define endl '\\n'",
            "#define MAX_SIZE 100005",
            "#define MOD 1000000007",
            "// types",
            "typedef long long ll;",
            "typedef unsigned long long ull;",
            "",
            "int main(int argc, char *argv[]) {",
            "\tint tc=1;",
            "\t//cin>>tc;",
            "\twhile(tc--){",
            "\t\t$1",
            "\t}",
            "\treturn 0;",
            "}"
        ],
        "description": "codeforces template"
    },
    "hdef": {
        "prefix": "hdef",
        "body": [
            "#ifndef $1",
            "#define $1",
            "",
            "#endif // $1"
        ],
        "description": "header file definitions"
    },
    "my pair with +=*/": {
        "prefix": "pair_num",
        "body": [
            "struct pair_num//一个二元组类型",
            "{",
            " int x,y;",
            " pair_num operator +(pair_num a)const //不加const会CE",
            " {",
            "  pair_num res;",
            "  res.x=x+a.x;//x事实上是this.x",
            "  res.y=y+a.y;",
            "  return res;",
            " }",
            " pair_num operator -(pair_num a)const",
            " {",
            "  pair_num res;",
            "  res.x=x-a.x;",
            "  res.y=y-a.y;",
            "  return res;",
            " }",
            " bool operator <(pair_num a)const //sort,set等数据结构需要使用小于号",
            " {",
            "  return x<a.x||(x==a.x&&y<a.y);",
            " }",
            "}a,b,res;",
            "pair_num operator *(pair_num a,pair_num b)//在结构体外部定义时，不要加const",
            "{",
            " pair_num res;",
            " res.x=a.x*b.x;",
            " res.y=a.y*b.y;",
            " return res;",
            "}"
        ],
        "description": "my pair with +=*/"
    }
}
